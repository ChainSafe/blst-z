name: Build and Test Zig and Bun

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  zig-build-test:
    strategy:
      matrix:
        settings:
          - os: ubuntu-latest
            bun-target: linux-x64-gnu
          - os: ubuntu-24.04-arm
            bun-target: linux-arm64-gnu
          - os: ubuntu-latest
            bun-target: linux-x64-musl
          - os: ubuntu-24.04-arm
            bun-target: linux-arm64-musl
          - os: macos-13
            bun-target: darwin-x64
          - os: macos-latest
            bun-target: darwin-arm64
          # - os: windows-latest # TODO: https://github.com/ChainSafe/state-transition-z/issues/10
          #   bun-target: win32-x64-msvc

    runs-on: ${{ matrix.settings.os }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          submodules: recursive # Ensures submodules are cloned
          fetch-depth: 0        # Fetches the entire history for all branches

      - name: Print OS ${{ matrix.settings.os }}
        run: uname -a
      - name: Print Architecture ${{ matrix.settings.arch }}
        run: uname -m

      - name: Verify Submodules
        run: |
          git submodule update --init --recursive
          ls -la blst

      - name: Install Zig
        uses: mlugg/setup-zig@v1
        with:
          version: "0.14.0" # Set the required Zig version

      - name: Build and Test without portable
        run: |
          zig build test

      - name: Build and Test with portable
        run: |
          zig build -Dportable=true test

      - name: Install Bun
        uses: oven-sh/setup-bun@v2
        with:
          version: 1.2.13
      - name: Bun - Install Dependencies
        run: bun install
        working-directory: ./bun
      - name: Build binary using bun-ffi-z
        run: bun ./node_modules/.bin/bun-ffi-z build --target ${{ matrix.settings.bun-target }} --optimize ReleaseSafe
        working-directory: ./bun
      - name: Upload Zig Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.settings.bun-target }}
          path: 'zig-out/lib/*blst_min_pk.*'
          if-no-files-found: error

  bun-benchmark:
    name: run benchmark on ubuntu-latest x86_64
    needs: zig-build-upload
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Download artifacts
        uses: actions/download-artifact@v4 # no need zig installation, download artifacts from previous job instead
        with:
          name: linux-x64-gnu
          path: zig-out/lib
      - name: Install Bun
        uses: oven-sh/setup-bun@v2
        with:
          version: 1.2.13
      - name: Bun - Install Dependencies
        run: bun install
        working-directory: ./bun
      - name: Bun - Lint Code
        run: bun lint
        working-directory: ./bun
      - name: Bun - Unit Tests
        run: bun test:unit
        working-directory: ./bun
      - name: Benchmark
        run: bun benchmark
        working-directory: ./bun
        env:
          # To write to PRs and commits
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}