name: Zig Build and Test

on:
  push:
    branches:
      - te/publish_built_files

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform: [x86_64-macos]

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          submodules: recursive # Ensures submodules are cloned
          fetch-depth: 0        # Fetches the entire history for all branches

      - name: Verify Submodules
        run: |
          git submodule update --init --recursive
          ls -la blst

      - name: Install Zig
        uses: mlugg/setup-zig@v1
        with:
          version: "0.13.0" # Set the required Zig version

      - name: Build blst on host
        run: |
          cd blst
          zig cc -target x86_64-linux -c src/server.c -o server.o
          zig cc -target x86_64-linux -c build/assembly.S -o assembly.o
          zig ar rcs libblst.a server.o assembly.o

      - name: Verify built blst on host
        run: |
          ls -la blst/libblst.a

      - name: Build and test blst-z on host
        run: |
          zig build test

      - name: Build blst on ${{ matrix.platform }}
        run: |
          cd blst
          rm -f libblst.a
          zig cc -target ${{ matrix.platform }} -c src/server.c -o server.o
          zig cc -target ${{ matrix.platform }} -c build/assembly.S -o assembly.o
          zig ar rcs libblst.a server.o assembly.o

      - name: Verify built blst on ${{ matrix.platform }}
        run: |
          ls -la blst/libblst.a

      - name: Build blst-z on ${{ matrix.platform }}
        run: |
          zig build -Dtarget=${{ matrix.platform }}

      - name: Upload artifacts for ${{ matrix.platform }}
        uses: actions/upload-artifact@v4
        with:
          name: libblst_${{ matrix.platform }}.a
          path: zig-out/lib/libblst.a
        with:
          name: libblst_min_pk${{ matrix.platform }}.dylib
          path: zig-out/lib/libblst_min_pk.dylib