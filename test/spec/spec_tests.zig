// This file is generated by write_spec_tests.zig.
// Do not commit changes by hand.

const std = @import("std");
const spec_test_options = @import("spec_test_options");
const test_case = @import("test_case.zig");

const bls_tests_dir_name = "general/tests/general";
const allocator = std.testing.allocator;

test "phase0 - aggregate_verify - aggregate_verify_tampered_signature" {
    const test_dir_name = try std.fs.path.join(allocator, &[_][]const u8{
        spec_test_options.spec_test_out_dir,
        spec_test_options.spec_test_version,
        bls_tests_dir_name,
        "phase0/bls/aggregate_verify/bls/aggregate_verify_tampered_signature",
    });
    defer allocator.free(test_dir_name);

    const test_dir = try std.fs.cwd().openDir(test_dir_name, .{});
    try test_case.aggregate_verify(allocator, test_dir);
}

test "phase0 - aggregate_verify - aggregate_verify_na_pubkeys_and_infinity_signature" {
    const test_dir_name = try std.fs.path.join(allocator, &[_][]const u8{
        spec_test_options.spec_test_out_dir,
        spec_test_options.spec_test_version,
        bls_tests_dir_name,
        "phase0/bls/aggregate_verify/bls/aggregate_verify_na_pubkeys_and_infinity_signature",
    });
    defer allocator.free(test_dir_name);

    const test_dir = try std.fs.cwd().openDir(test_dir_name, .{});
    try test_case.aggregate_verify(allocator, test_dir);
}

test "phase0 - aggregate_verify - aggregate_verify_infinity_pubkey" {
    const test_dir_name = try std.fs.path.join(allocator, &[_][]const u8{
        spec_test_options.spec_test_out_dir,
        spec_test_options.spec_test_version,
        bls_tests_dir_name,
        "phase0/bls/aggregate_verify/bls/aggregate_verify_infinity_pubkey",
    });
    defer allocator.free(test_dir_name);

    const test_dir = try std.fs.cwd().openDir(test_dir_name, .{});
    try test_case.aggregate_verify(allocator, test_dir);
}

test "phase0 - aggregate_verify - aggregate_verify_na_pubkeys_and_zero_signature" {
    const test_dir_name = try std.fs.path.join(allocator, &[_][]const u8{
        spec_test_options.spec_test_out_dir,
        spec_test_options.spec_test_version,
        bls_tests_dir_name,
        "phase0/bls/aggregate_verify/bls/aggregate_verify_na_pubkeys_and_zero_signature",
    });
    defer allocator.free(test_dir_name);

    const test_dir = try std.fs.cwd().openDir(test_dir_name, .{});
    try test_case.aggregate_verify(allocator, test_dir);
}

test "phase0 - aggregate_verify - aggregate_verify_valid" {
    const test_dir_name = try std.fs.path.join(allocator, &[_][]const u8{
        spec_test_options.spec_test_out_dir,
        spec_test_options.spec_test_version,
        bls_tests_dir_name,
        "phase0/bls/aggregate_verify/bls/aggregate_verify_valid",
    });
    defer allocator.free(test_dir_name);

    const test_dir = try std.fs.cwd().openDir(test_dir_name, .{});
    try test_case.aggregate_verify(allocator, test_dir);
}

test "phase0 - aggregate - aggregate_infinity_signature" {
    const test_dir_name = try std.fs.path.join(allocator, &[_][]const u8{
        spec_test_options.spec_test_out_dir,
        spec_test_options.spec_test_version,
        bls_tests_dir_name,
        "phase0/bls/aggregate/bls/aggregate_infinity_signature",
    });
    defer allocator.free(test_dir_name);

    const test_dir = try std.fs.cwd().openDir(test_dir_name, .{});
    try test_case.aggregate(allocator, test_dir);
}

test "phase0 - aggregate - aggregate_0x0000000000000000000000000000000000000000000000000000000000000000" {
    const test_dir_name = try std.fs.path.join(allocator, &[_][]const u8{
        spec_test_options.spec_test_out_dir,
        spec_test_options.spec_test_version,
        bls_tests_dir_name,
        "phase0/bls/aggregate/bls/aggregate_0x0000000000000000000000000000000000000000000000000000000000000000",
    });
    defer allocator.free(test_dir_name);

    const test_dir = try std.fs.cwd().openDir(test_dir_name, .{});
    try test_case.aggregate(allocator, test_dir);
}

test "phase0 - aggregate - aggregate_0x5656565656565656565656565656565656565656565656565656565656565656" {
    const test_dir_name = try std.fs.path.join(allocator, &[_][]const u8{
        spec_test_options.spec_test_out_dir,
        spec_test_options.spec_test_version,
        bls_tests_dir_name,
        "phase0/bls/aggregate/bls/aggregate_0x5656565656565656565656565656565656565656565656565656565656565656",
    });
    defer allocator.free(test_dir_name);

    const test_dir = try std.fs.cwd().openDir(test_dir_name, .{});
    try test_case.aggregate(allocator, test_dir);
}

test "phase0 - aggregate - aggregate_0xabababababababababababababababababababababababababababababababab" {
    const test_dir_name = try std.fs.path.join(allocator, &[_][]const u8{
        spec_test_options.spec_test_out_dir,
        spec_test_options.spec_test_version,
        bls_tests_dir_name,
        "phase0/bls/aggregate/bls/aggregate_0xabababababababababababababababababababababababababababababababab",
    });
    defer allocator.free(test_dir_name);

    const test_dir = try std.fs.cwd().openDir(test_dir_name, .{});
    try test_case.aggregate(allocator, test_dir);
}

test "phase0 - aggregate - aggregate_na_signatures" {
    const test_dir_name = try std.fs.path.join(allocator, &[_][]const u8{
        spec_test_options.spec_test_out_dir,
        spec_test_options.spec_test_version,
        bls_tests_dir_name,
        "phase0/bls/aggregate/bls/aggregate_na_signatures",
    });
    defer allocator.free(test_dir_name);

    const test_dir = try std.fs.cwd().openDir(test_dir_name, .{});
    try test_case.aggregate(allocator, test_dir);
}

test "phase0 - verify - verify_wrong_pubkey_case_2ea479adf8c40300" {
    const test_dir_name = try std.fs.path.join(allocator, &[_][]const u8{
        spec_test_options.spec_test_out_dir,
        spec_test_options.spec_test_version,
        bls_tests_dir_name,
        "phase0/bls/verify/bls/verify_wrong_pubkey_case_2ea479adf8c40300",
    });
    defer allocator.free(test_dir_name);

    const test_dir = try std.fs.cwd().openDir(test_dir_name, .{});
    try test_case.verify(allocator, test_dir);
}

test "phase0 - verify - verify_wrong_pubkey_case_d34885d766d5f705" {
    const test_dir_name = try std.fs.path.join(allocator, &[_][]const u8{
        spec_test_options.spec_test_out_dir,
        spec_test_options.spec_test_version,
        bls_tests_dir_name,
        "phase0/bls/verify/bls/verify_wrong_pubkey_case_d34885d766d5f705",
    });
    defer allocator.free(test_dir_name);

    const test_dir = try std.fs.cwd().openDir(test_dir_name, .{});
    try test_case.verify(allocator, test_dir);
}

test "phase0 - verify - verify_valid_case_195246ee3bd3b6ec" {
    const test_dir_name = try std.fs.path.join(allocator, &[_][]const u8{
        spec_test_options.spec_test_out_dir,
        spec_test_options.spec_test_version,
        bls_tests_dir_name,
        "phase0/bls/verify/bls/verify_valid_case_195246ee3bd3b6ec",
    });
    defer allocator.free(test_dir_name);

    const test_dir = try std.fs.cwd().openDir(test_dir_name, .{});
    try test_case.verify(allocator, test_dir);
}

test "phase0 - verify - verify_tampered_signature_case_6b3b17f6962a490c" {
    const test_dir_name = try std.fs.path.join(allocator, &[_][]const u8{
        spec_test_options.spec_test_out_dir,
        spec_test_options.spec_test_version,
        bls_tests_dir_name,
        "phase0/bls/verify/bls/verify_tampered_signature_case_6b3b17f6962a490c",
    });
    defer allocator.free(test_dir_name);

    const test_dir = try std.fs.cwd().openDir(test_dir_name, .{});
    try test_case.verify(allocator, test_dir);
}

test "phase0 - verify - verify_valid_case_6eeb7c52dfd9baf0" {
    const test_dir_name = try std.fs.path.join(allocator, &[_][]const u8{
        spec_test_options.spec_test_out_dir,
        spec_test_options.spec_test_version,
        bls_tests_dir_name,
        "phase0/bls/verify/bls/verify_valid_case_6eeb7c52dfd9baf0",
    });
    defer allocator.free(test_dir_name);

    const test_dir = try std.fs.cwd().openDir(test_dir_name, .{});
    try test_case.verify(allocator, test_dir);
}

test "phase0 - verify - verify_valid_case_d34885d766d5f705" {
    const test_dir_name = try std.fs.path.join(allocator, &[_][]const u8{
        spec_test_options.spec_test_out_dir,
        spec_test_options.spec_test_version,
        bls_tests_dir_name,
        "phase0/bls/verify/bls/verify_valid_case_d34885d766d5f705",
    });
    defer allocator.free(test_dir_name);

    const test_dir = try std.fs.cwd().openDir(test_dir_name, .{});
    try test_case.verify(allocator, test_dir);
}

test "phase0 - verify - verify_valid_case_3208262581c8fc09" {
    const test_dir_name = try std.fs.path.join(allocator, &[_][]const u8{
        spec_test_options.spec_test_out_dir,
        spec_test_options.spec_test_version,
        bls_tests_dir_name,
        "phase0/bls/verify/bls/verify_valid_case_3208262581c8fc09",
    });
    defer allocator.free(test_dir_name);

    const test_dir = try std.fs.cwd().openDir(test_dir_name, .{});
    try test_case.verify(allocator, test_dir);
}

test "phase0 - verify - verify_tampered_signature_case_2f09d443ab8a3ac2" {
    const test_dir_name = try std.fs.path.join(allocator, &[_][]const u8{
        spec_test_options.spec_test_out_dir,
        spec_test_options.spec_test_version,
        bls_tests_dir_name,
        "phase0/bls/verify/bls/verify_tampered_signature_case_2f09d443ab8a3ac2",
    });
    defer allocator.free(test_dir_name);

    const test_dir = try std.fs.cwd().openDir(test_dir_name, .{});
    try test_case.verify(allocator, test_dir);
}

test "phase0 - verify - verify_tampered_signature_case_6eeb7c52dfd9baf0" {
    const test_dir_name = try std.fs.path.join(allocator, &[_][]const u8{
        spec_test_options.spec_test_out_dir,
        spec_test_options.spec_test_version,
        bls_tests_dir_name,
        "phase0/bls/verify/bls/verify_tampered_signature_case_6eeb7c52dfd9baf0",
    });
    defer allocator.free(test_dir_name);

    const test_dir = try std.fs.cwd().openDir(test_dir_name, .{});
    try test_case.verify(allocator, test_dir);
}

test "phase0 - verify - verify_tampered_signature_case_d34885d766d5f705" {
    const test_dir_name = try std.fs.path.join(allocator, &[_][]const u8{
        spec_test_options.spec_test_out_dir,
        spec_test_options.spec_test_version,
        bls_tests_dir_name,
        "phase0/bls/verify/bls/verify_tampered_signature_case_d34885d766d5f705",
    });
    defer allocator.free(test_dir_name);

    const test_dir = try std.fs.cwd().openDir(test_dir_name, .{});
    try test_case.verify(allocator, test_dir);
}

test "phase0 - verify - verify_valid_case_6b3b17f6962a490c" {
    const test_dir_name = try std.fs.path.join(allocator, &[_][]const u8{
        spec_test_options.spec_test_out_dir,
        spec_test_options.spec_test_version,
        bls_tests_dir_name,
        "phase0/bls/verify/bls/verify_valid_case_6b3b17f6962a490c",
    });
    defer allocator.free(test_dir_name);

    const test_dir = try std.fs.cwd().openDir(test_dir_name, .{});
    try test_case.verify(allocator, test_dir);
}

test "phase0 - verify - verify_tampered_signature_case_3208262581c8fc09" {
    const test_dir_name = try std.fs.path.join(allocator, &[_][]const u8{
        spec_test_options.spec_test_out_dir,
        spec_test_options.spec_test_version,
        bls_tests_dir_name,
        "phase0/bls/verify/bls/verify_tampered_signature_case_3208262581c8fc09",
    });
    defer allocator.free(test_dir_name);

    const test_dir = try std.fs.cwd().openDir(test_dir_name, .{});
    try test_case.verify(allocator, test_dir);
}

test "phase0 - verify - verify_wrong_pubkey_case_6eeb7c52dfd9baf0" {
    const test_dir_name = try std.fs.path.join(allocator, &[_][]const u8{
        spec_test_options.spec_test_out_dir,
        spec_test_options.spec_test_version,
        bls_tests_dir_name,
        "phase0/bls/verify/bls/verify_wrong_pubkey_case_6eeb7c52dfd9baf0",
    });
    defer allocator.free(test_dir_name);

    const test_dir = try std.fs.cwd().openDir(test_dir_name, .{});
    try test_case.verify(allocator, test_dir);
}

test "phase0 - verify - verify_tampered_signature_case_8761a0b7e920c323" {
    const test_dir_name = try std.fs.path.join(allocator, &[_][]const u8{
        spec_test_options.spec_test_out_dir,
        spec_test_options.spec_test_version,
        bls_tests_dir_name,
        "phase0/bls/verify/bls/verify_tampered_signature_case_8761a0b7e920c323",
    });
    defer allocator.free(test_dir_name);

    const test_dir = try std.fs.cwd().openDir(test_dir_name, .{});
    try test_case.verify(allocator, test_dir);
}

test "phase0 - verify - verify_tampered_signature_case_195246ee3bd3b6ec" {
    const test_dir_name = try std.fs.path.join(allocator, &[_][]const u8{
        spec_test_options.spec_test_out_dir,
        spec_test_options.spec_test_version,
        bls_tests_dir_name,
        "phase0/bls/verify/bls/verify_tampered_signature_case_195246ee3bd3b6ec",
    });
    defer allocator.free(test_dir_name);

    const test_dir = try std.fs.cwd().openDir(test_dir_name, .{});
    try test_case.verify(allocator, test_dir);
}

test "phase0 - verify - verify_wrong_pubkey_case_3208262581c8fc09" {
    const test_dir_name = try std.fs.path.join(allocator, &[_][]const u8{
        spec_test_options.spec_test_out_dir,
        spec_test_options.spec_test_version,
        bls_tests_dir_name,
        "phase0/bls/verify/bls/verify_wrong_pubkey_case_3208262581c8fc09",
    });
    defer allocator.free(test_dir_name);

    const test_dir = try std.fs.cwd().openDir(test_dir_name, .{});
    try test_case.verify(allocator, test_dir);
}

test "phase0 - verify - verify_valid_case_8761a0b7e920c323" {
    const test_dir_name = try std.fs.path.join(allocator, &[_][]const u8{
        spec_test_options.spec_test_out_dir,
        spec_test_options.spec_test_version,
        bls_tests_dir_name,
        "phase0/bls/verify/bls/verify_valid_case_8761a0b7e920c323",
    });
    defer allocator.free(test_dir_name);

    const test_dir = try std.fs.cwd().openDir(test_dir_name, .{});
    try test_case.verify(allocator, test_dir);
}

test "phase0 - verify - verify_tampered_signature_case_e8a50c445c855360" {
    const test_dir_name = try std.fs.path.join(allocator, &[_][]const u8{
        spec_test_options.spec_test_out_dir,
        spec_test_options.spec_test_version,
        bls_tests_dir_name,
        "phase0/bls/verify/bls/verify_tampered_signature_case_e8a50c445c855360",
    });
    defer allocator.free(test_dir_name);

    const test_dir = try std.fs.cwd().openDir(test_dir_name, .{});
    try test_case.verify(allocator, test_dir);
}

test "phase0 - verify - verify_wrong_pubkey_case_8761a0b7e920c323" {
    const test_dir_name = try std.fs.path.join(allocator, &[_][]const u8{
        spec_test_options.spec_test_out_dir,
        spec_test_options.spec_test_version,
        bls_tests_dir_name,
        "phase0/bls/verify/bls/verify_wrong_pubkey_case_8761a0b7e920c323",
    });
    defer allocator.free(test_dir_name);

    const test_dir = try std.fs.cwd().openDir(test_dir_name, .{});
    try test_case.verify(allocator, test_dir);
}

test "phase0 - verify - verify_infinity_pubkey_and_infinity_signature" {
    const test_dir_name = try std.fs.path.join(allocator, &[_][]const u8{
        spec_test_options.spec_test_out_dir,
        spec_test_options.spec_test_version,
        bls_tests_dir_name,
        "phase0/bls/verify/bls/verify_infinity_pubkey_and_infinity_signature",
    });
    defer allocator.free(test_dir_name);

    const test_dir = try std.fs.cwd().openDir(test_dir_name, .{});
    try test_case.verify(allocator, test_dir);
}

test "phase0 - verify - verify_valid_case_e8a50c445c855360" {
    const test_dir_name = try std.fs.path.join(allocator, &[_][]const u8{
        spec_test_options.spec_test_out_dir,
        spec_test_options.spec_test_version,
        bls_tests_dir_name,
        "phase0/bls/verify/bls/verify_valid_case_e8a50c445c855360",
    });
    defer allocator.free(test_dir_name);

    const test_dir = try std.fs.cwd().openDir(test_dir_name, .{});
    try test_case.verify(allocator, test_dir);
}

test "phase0 - verify - verify_valid_case_2ea479adf8c40300" {
    const test_dir_name = try std.fs.path.join(allocator, &[_][]const u8{
        spec_test_options.spec_test_out_dir,
        spec_test_options.spec_test_version,
        bls_tests_dir_name,
        "phase0/bls/verify/bls/verify_valid_case_2ea479adf8c40300",
    });
    defer allocator.free(test_dir_name);

    const test_dir = try std.fs.cwd().openDir(test_dir_name, .{});
    try test_case.verify(allocator, test_dir);
}

test "phase0 - verify - verify_wrong_pubkey_case_2f09d443ab8a3ac2" {
    const test_dir_name = try std.fs.path.join(allocator, &[_][]const u8{
        spec_test_options.spec_test_out_dir,
        spec_test_options.spec_test_version,
        bls_tests_dir_name,
        "phase0/bls/verify/bls/verify_wrong_pubkey_case_2f09d443ab8a3ac2",
    });
    defer allocator.free(test_dir_name);

    const test_dir = try std.fs.cwd().openDir(test_dir_name, .{});
    try test_case.verify(allocator, test_dir);
}

test "phase0 - verify - verify_wrong_pubkey_case_6b3b17f6962a490c" {
    const test_dir_name = try std.fs.path.join(allocator, &[_][]const u8{
        spec_test_options.spec_test_out_dir,
        spec_test_options.spec_test_version,
        bls_tests_dir_name,
        "phase0/bls/verify/bls/verify_wrong_pubkey_case_6b3b17f6962a490c",
    });
    defer allocator.free(test_dir_name);

    const test_dir = try std.fs.cwd().openDir(test_dir_name, .{});
    try test_case.verify(allocator, test_dir);
}

test "phase0 - verify - verify_valid_case_2f09d443ab8a3ac2" {
    const test_dir_name = try std.fs.path.join(allocator, &[_][]const u8{
        spec_test_options.spec_test_out_dir,
        spec_test_options.spec_test_version,
        bls_tests_dir_name,
        "phase0/bls/verify/bls/verify_valid_case_2f09d443ab8a3ac2",
    });
    defer allocator.free(test_dir_name);

    const test_dir = try std.fs.cwd().openDir(test_dir_name, .{});
    try test_case.verify(allocator, test_dir);
}

test "phase0 - verify - verify_wrong_pubkey_case_e8a50c445c855360" {
    const test_dir_name = try std.fs.path.join(allocator, &[_][]const u8{
        spec_test_options.spec_test_out_dir,
        spec_test_options.spec_test_version,
        bls_tests_dir_name,
        "phase0/bls/verify/bls/verify_wrong_pubkey_case_e8a50c445c855360",
    });
    defer allocator.free(test_dir_name);

    const test_dir = try std.fs.cwd().openDir(test_dir_name, .{});
    try test_case.verify(allocator, test_dir);
}

test "phase0 - verify - verify_tampered_signature_case_2ea479adf8c40300" {
    const test_dir_name = try std.fs.path.join(allocator, &[_][]const u8{
        spec_test_options.spec_test_out_dir,
        spec_test_options.spec_test_version,
        bls_tests_dir_name,
        "phase0/bls/verify/bls/verify_tampered_signature_case_2ea479adf8c40300",
    });
    defer allocator.free(test_dir_name);

    const test_dir = try std.fs.cwd().openDir(test_dir_name, .{});
    try test_case.verify(allocator, test_dir);
}

test "phase0 - verify - verify_wrong_pubkey_case_195246ee3bd3b6ec" {
    const test_dir_name = try std.fs.path.join(allocator, &[_][]const u8{
        spec_test_options.spec_test_out_dir,
        spec_test_options.spec_test_version,
        bls_tests_dir_name,
        "phase0/bls/verify/bls/verify_wrong_pubkey_case_195246ee3bd3b6ec",
    });
    defer allocator.free(test_dir_name);

    const test_dir = try std.fs.cwd().openDir(test_dir_name, .{});
    try test_case.verify(allocator, test_dir);
}

test "phase0 - sign - sign_case_c82df61aa3ee60fb" {
    const test_dir_name = try std.fs.path.join(allocator, &[_][]const u8{
        spec_test_options.spec_test_out_dir,
        spec_test_options.spec_test_version,
        bls_tests_dir_name,
        "phase0/bls/sign/bls/sign_case_c82df61aa3ee60fb",
    });
    defer allocator.free(test_dir_name);

    const test_dir = try std.fs.cwd().openDir(test_dir_name, .{});
    try test_case.sign(allocator, test_dir);
}

test "phase0 - sign - sign_case_37286e1a6d1f6eb3" {
    const test_dir_name = try std.fs.path.join(allocator, &[_][]const u8{
        spec_test_options.spec_test_out_dir,
        spec_test_options.spec_test_version,
        bls_tests_dir_name,
        "phase0/bls/sign/bls/sign_case_37286e1a6d1f6eb3",
    });
    defer allocator.free(test_dir_name);

    const test_dir = try std.fs.cwd().openDir(test_dir_name, .{});
    try test_case.sign(allocator, test_dir);
}

test "phase0 - sign - sign_case_f2ae1097e7d0e18b" {
    const test_dir_name = try std.fs.path.join(allocator, &[_][]const u8{
        spec_test_options.spec_test_out_dir,
        spec_test_options.spec_test_version,
        bls_tests_dir_name,
        "phase0/bls/sign/bls/sign_case_f2ae1097e7d0e18b",
    });
    defer allocator.free(test_dir_name);

    const test_dir = try std.fs.cwd().openDir(test_dir_name, .{});
    try test_case.sign(allocator, test_dir);
}

test "phase0 - sign - sign_case_zero_privkey" {
    const test_dir_name = try std.fs.path.join(allocator, &[_][]const u8{
        spec_test_options.spec_test_out_dir,
        spec_test_options.spec_test_version,
        bls_tests_dir_name,
        "phase0/bls/sign/bls/sign_case_zero_privkey",
    });
    defer allocator.free(test_dir_name);

    const test_dir = try std.fs.cwd().openDir(test_dir_name, .{});
    try test_case.sign(allocator, test_dir);
}

test "phase0 - sign - sign_case_d0e28d7e76eb6e9c" {
    const test_dir_name = try std.fs.path.join(allocator, &[_][]const u8{
        spec_test_options.spec_test_out_dir,
        spec_test_options.spec_test_version,
        bls_tests_dir_name,
        "phase0/bls/sign/bls/sign_case_d0e28d7e76eb6e9c",
    });
    defer allocator.free(test_dir_name);

    const test_dir = try std.fs.cwd().openDir(test_dir_name, .{});
    try test_case.sign(allocator, test_dir);
}

test "phase0 - sign - sign_case_11b8c7cad5238946" {
    const test_dir_name = try std.fs.path.join(allocator, &[_][]const u8{
        spec_test_options.spec_test_out_dir,
        spec_test_options.spec_test_version,
        bls_tests_dir_name,
        "phase0/bls/sign/bls/sign_case_11b8c7cad5238946",
    });
    defer allocator.free(test_dir_name);

    const test_dir = try std.fs.cwd().openDir(test_dir_name, .{});
    try test_case.sign(allocator, test_dir);
}

test "phase0 - sign - sign_case_84d45c9c7cca6b92" {
    const test_dir_name = try std.fs.path.join(allocator, &[_][]const u8{
        spec_test_options.spec_test_out_dir,
        spec_test_options.spec_test_version,
        bls_tests_dir_name,
        "phase0/bls/sign/bls/sign_case_84d45c9c7cca6b92",
    });
    defer allocator.free(test_dir_name);

    const test_dir = try std.fs.cwd().openDir(test_dir_name, .{});
    try test_case.sign(allocator, test_dir);
}

test "phase0 - sign - sign_case_7055381f640f2c1d" {
    const test_dir_name = try std.fs.path.join(allocator, &[_][]const u8{
        spec_test_options.spec_test_out_dir,
        spec_test_options.spec_test_version,
        bls_tests_dir_name,
        "phase0/bls/sign/bls/sign_case_7055381f640f2c1d",
    });
    defer allocator.free(test_dir_name);

    const test_dir = try std.fs.cwd().openDir(test_dir_name, .{});
    try test_case.sign(allocator, test_dir);
}

test "phase0 - sign - sign_case_8cd3d4d0d9a5b265" {
    const test_dir_name = try std.fs.path.join(allocator, &[_][]const u8{
        spec_test_options.spec_test_out_dir,
        spec_test_options.spec_test_version,
        bls_tests_dir_name,
        "phase0/bls/sign/bls/sign_case_8cd3d4d0d9a5b265",
    });
    defer allocator.free(test_dir_name);

    const test_dir = try std.fs.cwd().openDir(test_dir_name, .{});
    try test_case.sign(allocator, test_dir);
}

test "phase0 - sign - sign_case_142f678a8d05fcd1" {
    const test_dir_name = try std.fs.path.join(allocator, &[_][]const u8{
        spec_test_options.spec_test_out_dir,
        spec_test_options.spec_test_version,
        bls_tests_dir_name,
        "phase0/bls/sign/bls/sign_case_142f678a8d05fcd1",
    });
    defer allocator.free(test_dir_name);

    const test_dir = try std.fs.cwd().openDir(test_dir_name, .{});
    try test_case.sign(allocator, test_dir);
}

test "phase0 - fast_aggregate_verify - fast_aggregate_verify_extra_pubkey_a698ea45b109f303" {
    const test_dir_name = try std.fs.path.join(allocator, &[_][]const u8{
        spec_test_options.spec_test_out_dir,
        spec_test_options.spec_test_version,
        bls_tests_dir_name,
        "phase0/bls/fast_aggregate_verify/bls/fast_aggregate_verify_extra_pubkey_a698ea45b109f303",
    });
    defer allocator.free(test_dir_name);

    const test_dir = try std.fs.cwd().openDir(test_dir_name, .{});
    try test_case.fast_aggregate_verify(allocator, test_dir);
}

test "phase0 - fast_aggregate_verify - fast_aggregate_verify_valid_652ce62f09290811" {
    const test_dir_name = try std.fs.path.join(allocator, &[_][]const u8{
        spec_test_options.spec_test_out_dir,
        spec_test_options.spec_test_version,
        bls_tests_dir_name,
        "phase0/bls/fast_aggregate_verify/bls/fast_aggregate_verify_valid_652ce62f09290811",
    });
    defer allocator.free(test_dir_name);

    const test_dir = try std.fs.cwd().openDir(test_dir_name, .{});
    try test_case.fast_aggregate_verify(allocator, test_dir);
}

test "phase0 - fast_aggregate_verify - fast_aggregate_verify_tampered_signature_652ce62f09290811" {
    const test_dir_name = try std.fs.path.join(allocator, &[_][]const u8{
        spec_test_options.spec_test_out_dir,
        spec_test_options.spec_test_version,
        bls_tests_dir_name,
        "phase0/bls/fast_aggregate_verify/bls/fast_aggregate_verify_tampered_signature_652ce62f09290811",
    });
    defer allocator.free(test_dir_name);

    const test_dir = try std.fs.cwd().openDir(test_dir_name, .{});
    try test_case.fast_aggregate_verify(allocator, test_dir);
}

test "phase0 - fast_aggregate_verify - fast_aggregate_verify_valid_3d7576f3c0e3570a" {
    const test_dir_name = try std.fs.path.join(allocator, &[_][]const u8{
        spec_test_options.spec_test_out_dir,
        spec_test_options.spec_test_version,
        bls_tests_dir_name,
        "phase0/bls/fast_aggregate_verify/bls/fast_aggregate_verify_valid_3d7576f3c0e3570a",
    });
    defer allocator.free(test_dir_name);

    const test_dir = try std.fs.cwd().openDir(test_dir_name, .{});
    try test_case.fast_aggregate_verify(allocator, test_dir);
}

test "phase0 - fast_aggregate_verify - fast_aggregate_verify_tampered_signature_3d7576f3c0e3570a" {
    const test_dir_name = try std.fs.path.join(allocator, &[_][]const u8{
        spec_test_options.spec_test_out_dir,
        spec_test_options.spec_test_version,
        bls_tests_dir_name,
        "phase0/bls/fast_aggregate_verify/bls/fast_aggregate_verify_tampered_signature_3d7576f3c0e3570a",
    });
    defer allocator.free(test_dir_name);

    const test_dir = try std.fs.cwd().openDir(test_dir_name, .{});
    try test_case.fast_aggregate_verify(allocator, test_dir);
}

test "phase0 - fast_aggregate_verify - fast_aggregate_verify_infinity_pubkey" {
    const test_dir_name = try std.fs.path.join(allocator, &[_][]const u8{
        spec_test_options.spec_test_out_dir,
        spec_test_options.spec_test_version,
        bls_tests_dir_name,
        "phase0/bls/fast_aggregate_verify/bls/fast_aggregate_verify_infinity_pubkey",
    });
    defer allocator.free(test_dir_name);

    const test_dir = try std.fs.cwd().openDir(test_dir_name, .{});
    try test_case.fast_aggregate_verify(allocator, test_dir);
}

test "phase0 - fast_aggregate_verify - fast_aggregate_verify_valid_5e745ad0c6199a6c" {
    const test_dir_name = try std.fs.path.join(allocator, &[_][]const u8{
        spec_test_options.spec_test_out_dir,
        spec_test_options.spec_test_version,
        bls_tests_dir_name,
        "phase0/bls/fast_aggregate_verify/bls/fast_aggregate_verify_valid_5e745ad0c6199a6c",
    });
    defer allocator.free(test_dir_name);

    const test_dir = try std.fs.cwd().openDir(test_dir_name, .{});
    try test_case.fast_aggregate_verify(allocator, test_dir);
}

test "phase0 - fast_aggregate_verify - fast_aggregate_verify_tampered_signature_5e745ad0c6199a6c" {
    const test_dir_name = try std.fs.path.join(allocator, &[_][]const u8{
        spec_test_options.spec_test_out_dir,
        spec_test_options.spec_test_version,
        bls_tests_dir_name,
        "phase0/bls/fast_aggregate_verify/bls/fast_aggregate_verify_tampered_signature_5e745ad0c6199a6c",
    });
    defer allocator.free(test_dir_name);

    const test_dir = try std.fs.cwd().openDir(test_dir_name, .{});
    try test_case.fast_aggregate_verify(allocator, test_dir);
}

test "phase0 - fast_aggregate_verify - fast_aggregate_verify_extra_pubkey_5a38e6b4017fe4dd" {
    const test_dir_name = try std.fs.path.join(allocator, &[_][]const u8{
        spec_test_options.spec_test_out_dir,
        spec_test_options.spec_test_version,
        bls_tests_dir_name,
        "phase0/bls/fast_aggregate_verify/bls/fast_aggregate_verify_extra_pubkey_5a38e6b4017fe4dd",
    });
    defer allocator.free(test_dir_name);

    const test_dir = try std.fs.cwd().openDir(test_dir_name, .{});
    try test_case.fast_aggregate_verify(allocator, test_dir);
}

test "phase0 - fast_aggregate_verify - fast_aggregate_verify_na_pubkeys_and_infinity_signature" {
    const test_dir_name = try std.fs.path.join(allocator, &[_][]const u8{
        spec_test_options.spec_test_out_dir,
        spec_test_options.spec_test_version,
        bls_tests_dir_name,
        "phase0/bls/fast_aggregate_verify/bls/fast_aggregate_verify_na_pubkeys_and_infinity_signature",
    });
    defer allocator.free(test_dir_name);

    const test_dir = try std.fs.cwd().openDir(test_dir_name, .{});
    try test_case.fast_aggregate_verify(allocator, test_dir);
}

test "phase0 - fast_aggregate_verify - fast_aggregate_verify_extra_pubkey_4f079f946446fabf" {
    const test_dir_name = try std.fs.path.join(allocator, &[_][]const u8{
        spec_test_options.spec_test_out_dir,
        spec_test_options.spec_test_version,
        bls_tests_dir_name,
        "phase0/bls/fast_aggregate_verify/bls/fast_aggregate_verify_extra_pubkey_4f079f946446fabf",
    });
    defer allocator.free(test_dir_name);

    const test_dir = try std.fs.cwd().openDir(test_dir_name, .{});
    try test_case.fast_aggregate_verify(allocator, test_dir);
}

test "phase0 - fast_aggregate_verify - fast_aggregate_verify_na_pubkeys_and_zero_signature" {
    const test_dir_name = try std.fs.path.join(allocator, &[_][]const u8{
        spec_test_options.spec_test_out_dir,
        spec_test_options.spec_test_version,
        bls_tests_dir_name,
        "phase0/bls/fast_aggregate_verify/bls/fast_aggregate_verify_na_pubkeys_and_zero_signature",
    });
    defer allocator.free(test_dir_name);

    const test_dir = try std.fs.cwd().openDir(test_dir_name, .{});
    try test_case.fast_aggregate_verify(allocator, test_dir);
}

test "altair - eth_fast_aggregate_verify - eth_fast_aggregate_verify_tampered_signature_652ce62f09290811" {
    const test_dir_name = try std.fs.path.join(allocator, &[_][]const u8{
        spec_test_options.spec_test_out_dir,
        spec_test_options.spec_test_version,
        bls_tests_dir_name,
        "altair/bls/eth_fast_aggregate_verify/bls/eth_fast_aggregate_verify_tampered_signature_652ce62f09290811",
    });
    defer allocator.free(test_dir_name);

    const test_dir = try std.fs.cwd().openDir(test_dir_name, .{});
    try test_case.eth_fast_aggregate_verify(allocator, test_dir);
}

test "altair - eth_fast_aggregate_verify - eth_fast_aggregate_verify_na_pubkeys_and_zero_signature" {
    const test_dir_name = try std.fs.path.join(allocator, &[_][]const u8{
        spec_test_options.spec_test_out_dir,
        spec_test_options.spec_test_version,
        bls_tests_dir_name,
        "altair/bls/eth_fast_aggregate_verify/bls/eth_fast_aggregate_verify_na_pubkeys_and_zero_signature",
    });
    defer allocator.free(test_dir_name);

    const test_dir = try std.fs.cwd().openDir(test_dir_name, .{});
    try test_case.eth_fast_aggregate_verify(allocator, test_dir);
}

test "altair - eth_fast_aggregate_verify - eth_fast_aggregate_verify_extra_pubkey_5a38e6b4017fe4dd" {
    const test_dir_name = try std.fs.path.join(allocator, &[_][]const u8{
        spec_test_options.spec_test_out_dir,
        spec_test_options.spec_test_version,
        bls_tests_dir_name,
        "altair/bls/eth_fast_aggregate_verify/bls/eth_fast_aggregate_verify_extra_pubkey_5a38e6b4017fe4dd",
    });
    defer allocator.free(test_dir_name);

    const test_dir = try std.fs.cwd().openDir(test_dir_name, .{});
    try test_case.eth_fast_aggregate_verify(allocator, test_dir);
}

test "altair - eth_fast_aggregate_verify - eth_fast_aggregate_verify_valid_652ce62f09290811" {
    const test_dir_name = try std.fs.path.join(allocator, &[_][]const u8{
        spec_test_options.spec_test_out_dir,
        spec_test_options.spec_test_version,
        bls_tests_dir_name,
        "altair/bls/eth_fast_aggregate_verify/bls/eth_fast_aggregate_verify_valid_652ce62f09290811",
    });
    defer allocator.free(test_dir_name);

    const test_dir = try std.fs.cwd().openDir(test_dir_name, .{});
    try test_case.eth_fast_aggregate_verify(allocator, test_dir);
}

test "altair - eth_fast_aggregate_verify - eth_fast_aggregate_verify_extra_pubkey_a698ea45b109f303" {
    const test_dir_name = try std.fs.path.join(allocator, &[_][]const u8{
        spec_test_options.spec_test_out_dir,
        spec_test_options.spec_test_version,
        bls_tests_dir_name,
        "altair/bls/eth_fast_aggregate_verify/bls/eth_fast_aggregate_verify_extra_pubkey_a698ea45b109f303",
    });
    defer allocator.free(test_dir_name);

    const test_dir = try std.fs.cwd().openDir(test_dir_name, .{});
    try test_case.eth_fast_aggregate_verify(allocator, test_dir);
}

test "altair - eth_fast_aggregate_verify - eth_fast_aggregate_verify_tampered_signature_3d7576f3c0e3570a" {
    const test_dir_name = try std.fs.path.join(allocator, &[_][]const u8{
        spec_test_options.spec_test_out_dir,
        spec_test_options.spec_test_version,
        bls_tests_dir_name,
        "altair/bls/eth_fast_aggregate_verify/bls/eth_fast_aggregate_verify_tampered_signature_3d7576f3c0e3570a",
    });
    defer allocator.free(test_dir_name);

    const test_dir = try std.fs.cwd().openDir(test_dir_name, .{});
    try test_case.eth_fast_aggregate_verify(allocator, test_dir);
}

test "altair - eth_fast_aggregate_verify - eth_fast_aggregate_verify_infinity_pubkey" {
    const test_dir_name = try std.fs.path.join(allocator, &[_][]const u8{
        spec_test_options.spec_test_out_dir,
        spec_test_options.spec_test_version,
        bls_tests_dir_name,
        "altair/bls/eth_fast_aggregate_verify/bls/eth_fast_aggregate_verify_infinity_pubkey",
    });
    defer allocator.free(test_dir_name);

    const test_dir = try std.fs.cwd().openDir(test_dir_name, .{});
    try test_case.eth_fast_aggregate_verify(allocator, test_dir);
}

test "altair - eth_fast_aggregate_verify - eth_fast_aggregate_verify_valid_3d7576f3c0e3570a" {
    const test_dir_name = try std.fs.path.join(allocator, &[_][]const u8{
        spec_test_options.spec_test_out_dir,
        spec_test_options.spec_test_version,
        bls_tests_dir_name,
        "altair/bls/eth_fast_aggregate_verify/bls/eth_fast_aggregate_verify_valid_3d7576f3c0e3570a",
    });
    defer allocator.free(test_dir_name);

    const test_dir = try std.fs.cwd().openDir(test_dir_name, .{});
    try test_case.eth_fast_aggregate_verify(allocator, test_dir);
}

test "altair - eth_fast_aggregate_verify - eth_fast_aggregate_verify_valid_5e745ad0c6199a6c" {
    const test_dir_name = try std.fs.path.join(allocator, &[_][]const u8{
        spec_test_options.spec_test_out_dir,
        spec_test_options.spec_test_version,
        bls_tests_dir_name,
        "altair/bls/eth_fast_aggregate_verify/bls/eth_fast_aggregate_verify_valid_5e745ad0c6199a6c",
    });
    defer allocator.free(test_dir_name);

    const test_dir = try std.fs.cwd().openDir(test_dir_name, .{});
    try test_case.eth_fast_aggregate_verify(allocator, test_dir);
}

test "altair - eth_fast_aggregate_verify - eth_fast_aggregate_verify_na_pubkeys_and_infinity_signature" {
    const test_dir_name = try std.fs.path.join(allocator, &[_][]const u8{
        spec_test_options.spec_test_out_dir,
        spec_test_options.spec_test_version,
        bls_tests_dir_name,
        "altair/bls/eth_fast_aggregate_verify/bls/eth_fast_aggregate_verify_na_pubkeys_and_infinity_signature",
    });
    defer allocator.free(test_dir_name);

    const test_dir = try std.fs.cwd().openDir(test_dir_name, .{});
    try test_case.eth_fast_aggregate_verify(allocator, test_dir);
}

test "altair - eth_fast_aggregate_verify - eth_fast_aggregate_verify_tampered_signature_5e745ad0c6199a6c" {
    const test_dir_name = try std.fs.path.join(allocator, &[_][]const u8{
        spec_test_options.spec_test_out_dir,
        spec_test_options.spec_test_version,
        bls_tests_dir_name,
        "altair/bls/eth_fast_aggregate_verify/bls/eth_fast_aggregate_verify_tampered_signature_5e745ad0c6199a6c",
    });
    defer allocator.free(test_dir_name);

    const test_dir = try std.fs.cwd().openDir(test_dir_name, .{});
    try test_case.eth_fast_aggregate_verify(allocator, test_dir);
}

test "altair - eth_fast_aggregate_verify - eth_fast_aggregate_verify_extra_pubkey_4f079f946446fabf" {
    const test_dir_name = try std.fs.path.join(allocator, &[_][]const u8{
        spec_test_options.spec_test_out_dir,
        spec_test_options.spec_test_version,
        bls_tests_dir_name,
        "altair/bls/eth_fast_aggregate_verify/bls/eth_fast_aggregate_verify_extra_pubkey_4f079f946446fabf",
    });
    defer allocator.free(test_dir_name);

    const test_dir = try std.fs.cwd().openDir(test_dir_name, .{});
    try test_case.eth_fast_aggregate_verify(allocator, test_dir);
}

test "altair - eth_aggregate_pubkeys - eth_aggregate_pubkeys_zero_pubkey" {
    const test_dir_name = try std.fs.path.join(allocator, &[_][]const u8{
        spec_test_options.spec_test_out_dir,
        spec_test_options.spec_test_version,
        bls_tests_dir_name,
        "altair/bls/eth_aggregate_pubkeys/bls/eth_aggregate_pubkeys_zero_pubkey",
    });
    defer allocator.free(test_dir_name);

    const test_dir = try std.fs.cwd().openDir(test_dir_name, .{});
    try test_case.eth_aggregate_pubkeys(allocator, test_dir);
}

test "altair - eth_aggregate_pubkeys - eth_aggregate_pubkeys_infinity_pubkey" {
    const test_dir_name = try std.fs.path.join(allocator, &[_][]const u8{
        spec_test_options.spec_test_out_dir,
        spec_test_options.spec_test_version,
        bls_tests_dir_name,
        "altair/bls/eth_aggregate_pubkeys/bls/eth_aggregate_pubkeys_infinity_pubkey",
    });
    defer allocator.free(test_dir_name);

    const test_dir = try std.fs.cwd().openDir(test_dir_name, .{});
    try test_case.eth_aggregate_pubkeys(allocator, test_dir);
}

test "altair - eth_aggregate_pubkeys - eth_aggregate_pubkeys_valid_e235e92e3a313f43" {
    const test_dir_name = try std.fs.path.join(allocator, &[_][]const u8{
        spec_test_options.spec_test_out_dir,
        spec_test_options.spec_test_version,
        bls_tests_dir_name,
        "altair/bls/eth_aggregate_pubkeys/bls/eth_aggregate_pubkeys_valid_e235e92e3a313f43",
    });
    defer allocator.free(test_dir_name);

    const test_dir = try std.fs.cwd().openDir(test_dir_name, .{});
    try test_case.eth_aggregate_pubkeys(allocator, test_dir);
}

test "altair - eth_aggregate_pubkeys - eth_aggregate_pubkeys_empty_list" {
    const test_dir_name = try std.fs.path.join(allocator, &[_][]const u8{
        spec_test_options.spec_test_out_dir,
        spec_test_options.spec_test_version,
        bls_tests_dir_name,
        "altair/bls/eth_aggregate_pubkeys/bls/eth_aggregate_pubkeys_empty_list",
    });
    defer allocator.free(test_dir_name);

    const test_dir = try std.fs.cwd().openDir(test_dir_name, .{});
    try test_case.eth_aggregate_pubkeys(allocator, test_dir);
}

test "altair - eth_aggregate_pubkeys - eth_aggregate_pubkeys_valid_pubkeys" {
    const test_dir_name = try std.fs.path.join(allocator, &[_][]const u8{
        spec_test_options.spec_test_out_dir,
        spec_test_options.spec_test_version,
        bls_tests_dir_name,
        "altair/bls/eth_aggregate_pubkeys/bls/eth_aggregate_pubkeys_valid_pubkeys",
    });
    defer allocator.free(test_dir_name);

    const test_dir = try std.fs.cwd().openDir(test_dir_name, .{});
    try test_case.eth_aggregate_pubkeys(allocator, test_dir);
}

test "altair - eth_aggregate_pubkeys - eth_aggregate_pubkeys_valid_ea0e3cc74e1de899" {
    const test_dir_name = try std.fs.path.join(allocator, &[_][]const u8{
        spec_test_options.spec_test_out_dir,
        spec_test_options.spec_test_version,
        bls_tests_dir_name,
        "altair/bls/eth_aggregate_pubkeys/bls/eth_aggregate_pubkeys_valid_ea0e3cc74e1de899",
    });
    defer allocator.free(test_dir_name);

    const test_dir = try std.fs.cwd().openDir(test_dir_name, .{});
    try test_case.eth_aggregate_pubkeys(allocator, test_dir);
}

test "altair - eth_aggregate_pubkeys - eth_aggregate_pubkeys_x40_pubkey" {
    const test_dir_name = try std.fs.path.join(allocator, &[_][]const u8{
        spec_test_options.spec_test_out_dir,
        spec_test_options.spec_test_version,
        bls_tests_dir_name,
        "altair/bls/eth_aggregate_pubkeys/bls/eth_aggregate_pubkeys_x40_pubkey",
    });
    defer allocator.free(test_dir_name);

    const test_dir = try std.fs.cwd().openDir(test_dir_name, .{});
    try test_case.eth_aggregate_pubkeys(allocator, test_dir);
}

test "altair - eth_aggregate_pubkeys - eth_aggregate_pubkeys_valid_f15974ec693571cf" {
    const test_dir_name = try std.fs.path.join(allocator, &[_][]const u8{
        spec_test_options.spec_test_out_dir,
        spec_test_options.spec_test_version,
        bls_tests_dir_name,
        "altair/bls/eth_aggregate_pubkeys/bls/eth_aggregate_pubkeys_valid_f15974ec693571cf",
    });
    defer allocator.free(test_dir_name);

    const test_dir = try std.fs.cwd().openDir(test_dir_name, .{});
    try test_case.eth_aggregate_pubkeys(allocator, test_dir);
}

